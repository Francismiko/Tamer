generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

enum MessageSender {
  Human
  AI

  @@schema("public")
}

enum MessageStatus {
  Pending
  Reject
  Done

  @@schema("public")
}

enum ExerciseTag {
  Grammar
  Vocabulary
  Listening
  Speaking
  Writing
  Reading

  @@schema("public")
}

enum ExerciseDifficulty {
  Easy
  Medium
  Hard

  @@schema("public")
}

enum ExerciseStructure {
  Sentence
  Paragraph
  Article

  @@schema("public")
}

enum ExerciseValidityStatus {
  Uncertain
  Valid
  Invalid

  @@schema("public")
}

model Chat {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  owner      String
  title      String     @default("Untitled")
  messages   Message[]
  exercises  Exercise[]
  chat_model ChatModel?
  create_at  DateTime   @default(now())
  update_at  DateTime   @updatedAt

  @@map("chat")
  @@schema("public")
}

model ChatModel {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  owner     String
  model     String
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  chat      Chat     @relation(fields: [chat_id], references: [id])
  chat_id   String   @unique

  @@map("chat_model")
  @@schema("public")
}

model Message {
  id        String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content   String?
  sender    MessageSender
  status    MessageStatus
  chat      Chat          @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  chat_id   String        @db.Uuid
  create_at DateTime      @default(now())
  update_at DateTime      @updatedAt

  @@index([chat_id])
  @@map("message")
  @@schema("public")
}

model Exercise {
  id              String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tag             ExerciseTag
  difficulty      ExerciseDifficulty
  structure       ExerciseStructure
  validity_status ExerciseValidityStatus
  chat            Chat                   @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  chat_id         String                 @db.Uuid
  create_at       DateTime               @default(now())
  update_at       DateTime               @updatedAt

  @@index([chat_id])
  @@map("exercise")
  @@schema("public")
}
